{"version":3,"sources":["components/Card/card.js","components/Navbar/navbar.js","components/Header/header.js","components/Gamediv/game.js","components/Footer/footer.js","App.js","index.js"],"names":["Card","props","class","alt","name","src","image","onClick","data-clicked","clicked","data-id","id","Navbar","message","score","highScore","Header","Game","state","pokemon","activeness","targetCard","event","thisId","target","getAttribute","console","log","filter","thisPokemon","handleCorrect","newPokemon","map","parseInt","setState","handleIncorrect","randomizeArr","handleHighScore","shake","setTimeout","this","bind","arr","temp","index","ctr","length","Math","floor","random","className","React","Component","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524a19bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nfunction Card(props) {\n    return (\n        <div class=\"cardWrapperWrapper\">\n            <div class=\"cardWrapper\">\n                <img alt={props.name} src={props.image}  onClick={props.onClick} data-clicked={props.clicked} data-id={props.id} class=\"cardImg\" />\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav class=\"navbar navbar-dark bg-primary\">\n            <h1>Clicky Game!</h1>\n            <h1>{props.message}</h1>\n            <h1>Score: {props.score} | Top Score: {props.highScore}</h1>\n        </nav>\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div class=\"headerDiv\">\r\n            <h1 class=\"text\">Clicky Game!</h1>\r\n            <h2 class=\"text\">Click on an image to earn points, but don't click on any more than once!</h2>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\nimport \"./game.css\";\nimport Card from \"../Card/card\";\nimport pokemon from \"../../pokemon.json\"\nimport Navbar from \"../Navbar/navbar\";\nimport Header from \"../Header/header\";\n\nclass Game extends React.Component {\n    state = {\n        pokemon,\n        score: 0,\n        highScore: 0,\n        message: \"Click an image to begin!\",\n        activeness: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            pokemon: this.state.pokemon.map(thisPokemon => {\n                thisPokemon.clicked = false;\n                return thisPokemon;\n            }\n            )\n        })\n        this.setState({\n            pokemon: this.randomizeArr(this.state.pokemon.map(thisPokemon => {\n                return thisPokemon;\n            }\n            ))\n        })\n    }\n\n    randomizeArr(arr) {\n        var ctr = arr.length, temp, index;\n\n        // While there are elements in the array\n        while (ctr > 0) {\n            // Pick a random index\n            index = Math.floor(Math.random() * ctr);\n            // Decrease ctr by 1\n            ctr--;\n            // And swap the last element with it\n            temp = arr[ctr];\n            arr[ctr] = arr[index];\n            arr[index] = temp;\n        }\n        // console.log(arr);\n        return arr;\n\n\n    }\n\n    targetCard = event => {\n        const thisId = event.target.getAttribute(\"data-id\");\n        console.log(\"id of this pokemon: \" + thisId);\n        // console.log(pokemon)\n        // console.log(this.state.pokemon.filter(thisPokemon => thisPokemon.id == thisId)[0].clicked)\n\n        if (this.state.pokemon.filter(thisPokemon => thisPokemon.id == thisId)[0].clicked === false) {\n            // debugger;\n            // console.log(this.state.pokemon[thisId].clicked)\n            this.handleCorrect();\n            const newPokemon = this.state.pokemon.map(thisPokemon => {\n                if (parseInt(thisPokemon.id) === parseInt(thisId)) {\n                    console.log(\"it worked\")\n                    thisPokemon.clicked = true;\n                    // console.log(thisPokemon.clicked)\n                }\n\n                return thisPokemon;\n            })\n            // console.log(newPokemon);\n            this.setState({ pokemon: newPokemon })\n            // console.log(pokemon)\n        } else {\n            this.handleIncorrect();\n        }\n    }\n\n    handleCorrect = () => {\n\n        this.setState({ score: this.state.score + 1 })\n        this.setState({ pokemon: this.randomizeArr(this.state.pokemon) })\n        this.setState({message: \"Good Job!\"})\n        this.handleHighScore();\n        console.log(this.state.score);\n        console.log(this.state.highScore)\n        console.log(\"correct\");\n\n    }\n\n    handleHighScore() {\n        if (this.state.score > this.state.highScore) {\n            this.setState({ highScore: this.state.highScore + 1 })\n        }\n    }\n\n    handleIncorrect() {\n\n        this.setState({ score: 0 })\n        this.setState({message: \"Sorry that was the wrong guess, try again!\"})\n        console.log(this.state.highScore)\n        const newPokemon = this.state.pokemon.map(thisPokemon => {\n            thisPokemon.clicked = false;\n            console.log(thisPokemon.clicked);\n            return thisPokemon;\n        })\n        this.setState({ pokemon: newPokemon })\n        this.setState({ pokemon: this.randomizeArr(this.state.pokemon) })\n        this.shake();\n        console.log(\"Incorrect\");\n    }\n\n    shake = () => {\n        this.setState({activeness: true});\n        setTimeout(function(){\n            this.setState({activeness: false});\n       }.bind(this),200);\n    }\n\n    render() {\n        return (\n            <div>\n            <Navbar\n            message={this.state.message} \n            score={this.state.score}\n            highScore={this.state.highScore}/>\n            <Header />\n            <div class=\"gameDiv\" className={\"gameDiv\" + (this.state.activeness? \"-active\":\"\")}>\n                {this.state.pokemon.map(pokemon => (\n                    <Card\n                        id={pokemon.id}\n                        name={pokemon.name}\n                        image={pokemon.image}\n                        clicked={pokemon.clicked}\n                        onClick={this.targetCard}\n                    />\n                ))}\n            </div>\n            </div>\n        );\n    }\n}\nexport default Game;","import React from \"react\";\nimport \"./footer.css\";\n\nfunction Footer() {\n    return (\n        <footer class=\"bg-primary\">\n            <h1 class=\"footerText\">Clicky Game</h1>\n        </footer>\n    );\n}\nexport default Footer;","import React from 'react';\n\nimport Game from \"./components/Gamediv/game\";\nimport Footer from \"./components/Footer/footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}